name: Deploy FDS
on:
  workflow_dispatch:
  push:
    branches:
      - '[0-9]+.[0-9]+.[0-9]+'
      - 'nightly-[0-9]+.[0-9]+.[0-9]+'
      - '!latest'
      - '!test/**'
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IS_LATEST: false
    outputs:
      TAG: ${{ steps.tag-selector.outputs.TAG }}
      WORKFLOW_ID: ${{ steps.workflow-selector.outputs.WORKFLOW_ID }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Extract image name
        run: |
          if [[ $GITHUB_REF_NAME = nightly* ]]
          then
            IMAGE_NAME=fds-nightly
          else
            IMAGE_NAME=fds
          fi
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "BASE=${{ env.REGISTRY }}/${{ github.repository_owner }}/${IMAGE_NAME}" >>  $GITHUB_ENV
      - name: Select Tag
        id: tag-selector
        run: |
          echo "TAG=$(echo ${GITHUB_REF_NAME#nightly-})" >> $GITHUB_ENV
          echo "TAG=$(echo ${GITHUB_REF_NAME#nightly-})" >> $GITHUB_OUTPUT
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.BASE }}
      - name: Extract Workflow ID
        id: workflow-selector
        run: |
          if [[ ${{ env.IMAGE_NAME }} = *nightly ]]
          then
            echo "WORKFLOW_ID=deploy.nightly.yaml" >> $GITHUB_ENV
            echo "WORKFLOW_ID=deploy.nightly.yaml" >> $GITHUB_OUTPUT
          else
            echo "WORKFLOW_ID=deploy.yaml" >> $GITHUB_ENV
            echo "WORKFLOW_ID=deploy.yaml" >> $GITHUB_OUTPUT
          fi
      - name: Check if new build version is latest
        if: ${{ !endsWith(env.IMAGE_NAME, 'nightly') }} 
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          REGEX=[0-9]+\.[0-9]+\.[0-9]
          LATEST_VERSION=0.0.0
          version_greater_equal()
          {
            printf '%s\n%s\n' "$2" "$1" | sort --check=quiet --version-sort
          }
          VERSIONS=$(curl --silent "https://api.github.com/users/${{ github.repository_owner }}/packages/container/${{ env.IMAGE_NAME }}/versions"  --stderr - \
            --header "Authorization: Bearer ${TOKEN}" | \
            grep -E "[[:space:]]+\"${REGEX}\"" | grep -oEi ${REGEX})
          for VERSION in $VERSIONS; do
            version_greater_equal $VERSION $LATEST_VERSION && LATEST_VERSION=$VERSION
          done
          if version_greater_equal ${{ env.TAG }} ${LATEST_VERSION}
          then
            echo "IS_LATEST=true" >> $GITHUB_ENV
          fi
      - name: Set Tags
        run: |
          if [[ ${{ env.IS_LATEST }} == true ]]
          then
            echo "TAGS=${{ env.BASE }}:${{ env.TAG }},${{ env.BASE }}:latest" >> $GITHUB_ENV
          else
            echo "TAGS=${{ env.BASE }}:${{ env.TAG }}" >> $GITHUB_ENV
          fi
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.TAGS }}
          labels: ${{ steps.meta.outputs.labels }}
  trigger-batchfds-workflow:
    needs: [build-and-push-image]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Check BatchFDS compatibility
        env:
          MIN_VERSION: 6.7.1
        run: |
          version_greater_equal() {
            printf '%s\n%s\n' "$2" "$1" | sort --check=quiet --version-sort
          }
          if version_greater_equal ${{ needs.build-and-push-image.outputs.TAG }} ${MIN_VERSION}; then
            echo "BUILD_BatchFDS=true" >> $GITHUB_ENV
          else
            echo "BUILD_BatchFDS=false" >> $GITHUB_ENV
          fi
      - name: Trigger BatchFDS build
        if: env.BUILD_BatchFDS == 'true'
        env:
          TOKEN: ${{ secrets.DISPATCH_WORKFLOWS_PUBLIC_BCL_TOKEN }}
          ORG: openbcl
          REPO: batchfds
        run: |
          curl -L  -X POST  -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Authorization: Bearer ${TOKEN}" \
          https://api.github.com/repos/${ORG}/${REPO}/actions/workflows/${{ needs.build-and-push-image.outputs.WORKFLOW_ID }}/dispatches \
          -d "{\"ref\":\"main\",\"inputs\": {\"tag\": \"${{ needs.build-and-push-image.outputs.TAG }}\"}}"