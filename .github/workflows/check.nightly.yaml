name: Check FDS Nightly Release
on:
  workflow_dispatch:
jobs:
  check-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: Fetch latest FDS nightly release version
        run: |
          REGEX_VERSION=[0-9]+\.[0-9]+\.[0-9]+\-[0-9]+
          REGEX_URL=https:.+?lnx.sh
          DOWNLOAD_URL=$(curl --silent "https://api.github.com/repos/firemodels/test_bundles/releases/tags/FDS_TEST" --stderr - | \
            grep -E "browser_download_url.+?${REGEX_URL}\"$" | \
            grep -oEi ${REGEX_URL})
          VERSION=$(echo ${DOWNLOAD_URL} | grep -oEi FDS-${REGEX_VERSION}[^A-Za-z0-9] | grep -oEi ${REGEX_VERSION})
          DOWNLOAD_URL=$(echo ${DOWNLOAD_URL} | sed 's/\//\\\//g')
          echo "DOWNLOAD_URL=${DOWNLOAD_URL}" >> $GITHUB_ENV
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
      - name: Check if branch for release exists
        continue-on-error: true
        run: |
          REGEX_RELEASE=(test/)?nightly-${{ env.VERSION }}
          echo "NEW_BRANCH=test/nightly-${{ env.VERSION }}" >> $GITHUB_ENV
          curl --silent -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/branches" --stderr - | grep -E \"${REGEX_RELEASE}\"
          echo "NEW_BRANCH=false" >> $GITHUB_ENV
      - name: Checkout repository
        if: env.NEW_BRANCH != 'false'
        uses: actions/checkout@v4
      - name: Create new test branch
        if: env.NEW_BRANCH != 'false'
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git switch -c ${{ env.NEW_BRANCH }}
          sed -i -E "s/https.+?sh/${{ env.DOWNLOAD_URL }}/g" Dockerfile
          git commit -am "FDS ${{ env.VERSION }}"
          git push --set-upstream origin ${{ env.NEW_BRANCH }}
      - name: Trigger Test
        if: env.NEW_BRANCH != 'false'
        run: |
          curl -L  -X POST  -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/workflows/test.yaml/dispatches \
          -d "{\"ref\":\"${{ env.NEW_BRANCH }}\"}"