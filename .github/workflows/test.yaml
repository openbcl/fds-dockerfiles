name: Test FDS Release
on:
  workflow_dispatch:
  push:
    branches:
      - 'test/[0-9]+.[0-9]+.[0-9]+'
      - 'test/nightly-[0-9]+.[0-9]+.[0-9]+-[0-9]+'
jobs:
  check-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Run Test
        run: chmod +x ./test/run.sh && ./test/run.sh
      - name: Cleanup nightly branches
        continue-on-error: true
        run: |
          if [[ $GITHUB_REF_NAME = test/nightly* ]]
          then            
            REGEX_RELEASE="nightly\-[0-9]+\.[0-9]+\.[0-9]+(\-[0-9]+)?"
            BRANCHES=$(curl --silent -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/branches" --stderr - | grep -oEi ${REGEX_RELEASE})
            for BRANCH in ${BRANCHES}; do
              git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
              git config user.name "github-actions[bot]"
              git push origin --delete ${BRANCH}
            done
          fi
      - name: Extract productive branch
        continue-on-error: true
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          BRANCH=${{ github.ref_name }}
          NEW_BRANCH=$(echo ${BRANCH#test/} | grep -oEi "(nightly-)?[0-9]+\.[0-9]+\.[0-9]+")
          echo "NEW_BRANCH=${NEW_BRANCH}" >> $GITHUB_ENV
          echo "CREATE_NEW_BRANCH=true" >> $GITHUB_ENV
          git fetch
          git stash
          git switch ${NEW_BRANCH}
          echo "CREATE_NEW_BRANCH=false" >> $GITHUB_ENV
      - name: Push to branch
        run: |
          if [[ ${{ env.CREATE_NEW_BRANCH }} == false ]]
          then
            git pull --unshallow
            git merge -X theirs ${{ github.ref_name }}
            git push
          else
            git switch -c ${{ env.NEW_BRANCH }}
            git push --set-upstream origin ${{ env.NEW_BRANCH }}
          fi
      - name: Trigger Deploy
        run: |
          curl -L  -X POST  -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/workflows/deploy.yaml/dispatches \
          -d "{\"ref\":\"${{ env.NEW_BRANCH }}\"}"
